//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InterfaceDesktop.ClientAccountServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientAccountServiceReference.ClientAccountManagementServiceSoap")]
    public interface ClientAccountManagementServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteClientAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteClientAccount(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteClientAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteClientAccountAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShowTotalAmountOfClients", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ShowTotalAmountOfClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShowTotalAmountOfClients", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ShowTotalAmountOfClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShowAllClients", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ShowAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShowAllClients", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ShowAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientName(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientNameAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientName(int clientID, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientName", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientNameAsync(int clientID, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientAddress(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientAddress", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientAddressAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientAddress(int clientID, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientAddress", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientAddressAsync(int clientID, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientContactNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientContactNumber(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientContactNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientContactNumberAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientContactNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientContactNumber(int clientID, string contactNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientContactNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientContactNumberAsync(int clientID, string contactNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientEmail(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientEmailAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientEmail(int clientID, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientEmailAsync(int clientID, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientPassword(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientPasswordAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientPassword(int clientID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientPasswordAsync(int clientID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientType(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientTypeAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientType(int clientID, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientType", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientTypeAsync(int clientID, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewClientAccountIndividual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateNewClientAccountIndividual(string name, string address, string contactNumber, string email, string password, string surname, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewClientAccountIndividual", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateNewClientAccountIndividualAsync(string name, string address, string contactNumber, string email, string password, string surname, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewClientAccountStaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateNewClientAccountStaff(string name, string address, string contactNumber, string email, string password, string surname, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewClientAccountStaff", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateNewClientAccountStaffAsync(string name, string address, string contactNumber, string email, string password, string surname, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientSurname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientSurname(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientSurname", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientSurnameAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientSurname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientSurname(int clientID, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientSurname", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientSurnameAsync(int clientID, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientGender", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientGender(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientGender", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientGenderAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientGender", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientGender(int clientID, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientGender", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientGenderAsync(int clientID, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewClientAccountCorporate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateNewClientAccountCorporate(string name, string address, string contactNumber, string email, string password, string companyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewClientAccountCorporate", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateNewClientAccountCorporateAsync(string name, string address, string contactNumber, string email, string password, string companyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientCompanyType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetClientCompanyType(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetClientCompanyType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetClientCompanyTypeAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientCompanyType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetClientCompanyType(int clientID, string companyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetClientCompanyType", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetClientCompanyTypeAsync(int clientID, string companyType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClientAccountManagementServiceSoapChannel : InterfaceDesktop.ClientAccountServiceReference.ClientAccountManagementServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientAccountManagementServiceSoapClient : System.ServiceModel.ClientBase<InterfaceDesktop.ClientAccountServiceReference.ClientAccountManagementServiceSoap>, InterfaceDesktop.ClientAccountServiceReference.ClientAccountManagementServiceSoap {
        
        public ClientAccountManagementServiceSoapClient() {
        }
        
        public ClientAccountManagementServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientAccountManagementServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAccountManagementServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAccountManagementServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool DeleteClientAccount(int clientID) {
            return base.Channel.DeleteClientAccount(clientID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClientAccountAsync(int clientID) {
            return base.Channel.DeleteClientAccountAsync(clientID);
        }
        
        public int ShowTotalAmountOfClients() {
            return base.Channel.ShowTotalAmountOfClients();
        }
        
        public System.Threading.Tasks.Task<int> ShowTotalAmountOfClientsAsync() {
            return base.Channel.ShowTotalAmountOfClientsAsync();
        }
        
        public System.Data.DataTable ShowAllClients() {
            return base.Channel.ShowAllClients();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ShowAllClientsAsync() {
            return base.Channel.ShowAllClientsAsync();
        }
        
        public string GetClientName(int clientID) {
            return base.Channel.GetClientName(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientNameAsync(int clientID) {
            return base.Channel.GetClientNameAsync(clientID);
        }
        
        public bool SetClientName(int clientID, string name) {
            return base.Channel.SetClientName(clientID, name);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientNameAsync(int clientID, string name) {
            return base.Channel.SetClientNameAsync(clientID, name);
        }
        
        public string GetClientAddress(int clientID) {
            return base.Channel.GetClientAddress(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientAddressAsync(int clientID) {
            return base.Channel.GetClientAddressAsync(clientID);
        }
        
        public bool SetClientAddress(int clientID, string address) {
            return base.Channel.SetClientAddress(clientID, address);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientAddressAsync(int clientID, string address) {
            return base.Channel.SetClientAddressAsync(clientID, address);
        }
        
        public string GetClientContactNumber(int clientID) {
            return base.Channel.GetClientContactNumber(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientContactNumberAsync(int clientID) {
            return base.Channel.GetClientContactNumberAsync(clientID);
        }
        
        public bool SetClientContactNumber(int clientID, string contactNumber) {
            return base.Channel.SetClientContactNumber(clientID, contactNumber);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientContactNumberAsync(int clientID, string contactNumber) {
            return base.Channel.SetClientContactNumberAsync(clientID, contactNumber);
        }
        
        public string GetClientEmail(int clientID) {
            return base.Channel.GetClientEmail(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientEmailAsync(int clientID) {
            return base.Channel.GetClientEmailAsync(clientID);
        }
        
        public bool SetClientEmail(int clientID, string email) {
            return base.Channel.SetClientEmail(clientID, email);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientEmailAsync(int clientID, string email) {
            return base.Channel.SetClientEmailAsync(clientID, email);
        }
        
        public string GetClientPassword(int clientID) {
            return base.Channel.GetClientPassword(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientPasswordAsync(int clientID) {
            return base.Channel.GetClientPasswordAsync(clientID);
        }
        
        public bool SetClientPassword(int clientID, string password) {
            return base.Channel.SetClientPassword(clientID, password);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientPasswordAsync(int clientID, string password) {
            return base.Channel.SetClientPasswordAsync(clientID, password);
        }
        
        public string GetClientType(int clientID) {
            return base.Channel.GetClientType(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientTypeAsync(int clientID) {
            return base.Channel.GetClientTypeAsync(clientID);
        }
        
        public bool SetClientType(int clientID, string type) {
            return base.Channel.SetClientType(clientID, type);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientTypeAsync(int clientID, string type) {
            return base.Channel.SetClientTypeAsync(clientID, type);
        }
        
        public bool CreateNewClientAccountIndividual(string name, string address, string contactNumber, string email, string password, string surname, string gender) {
            return base.Channel.CreateNewClientAccountIndividual(name, address, contactNumber, email, password, surname, gender);
        }
        
        public System.Threading.Tasks.Task<bool> CreateNewClientAccountIndividualAsync(string name, string address, string contactNumber, string email, string password, string surname, string gender) {
            return base.Channel.CreateNewClientAccountIndividualAsync(name, address, contactNumber, email, password, surname, gender);
        }
        
        public bool CreateNewClientAccountStaff(string name, string address, string contactNumber, string email, string password, string surname, string gender) {
            return base.Channel.CreateNewClientAccountStaff(name, address, contactNumber, email, password, surname, gender);
        }
        
        public System.Threading.Tasks.Task<bool> CreateNewClientAccountStaffAsync(string name, string address, string contactNumber, string email, string password, string surname, string gender) {
            return base.Channel.CreateNewClientAccountStaffAsync(name, address, contactNumber, email, password, surname, gender);
        }
        
        public string GetClientSurname(int clientID) {
            return base.Channel.GetClientSurname(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientSurnameAsync(int clientID) {
            return base.Channel.GetClientSurnameAsync(clientID);
        }
        
        public bool SetClientSurname(int clientID, string surname) {
            return base.Channel.SetClientSurname(clientID, surname);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientSurnameAsync(int clientID, string surname) {
            return base.Channel.SetClientSurnameAsync(clientID, surname);
        }
        
        public string GetClientGender(int clientID) {
            return base.Channel.GetClientGender(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientGenderAsync(int clientID) {
            return base.Channel.GetClientGenderAsync(clientID);
        }
        
        public bool SetClientGender(int clientID, string gender) {
            return base.Channel.SetClientGender(clientID, gender);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientGenderAsync(int clientID, string gender) {
            return base.Channel.SetClientGenderAsync(clientID, gender);
        }
        
        public bool CreateNewClientAccountCorporate(string name, string address, string contactNumber, string email, string password, string companyType) {
            return base.Channel.CreateNewClientAccountCorporate(name, address, contactNumber, email, password, companyType);
        }
        
        public System.Threading.Tasks.Task<bool> CreateNewClientAccountCorporateAsync(string name, string address, string contactNumber, string email, string password, string companyType) {
            return base.Channel.CreateNewClientAccountCorporateAsync(name, address, contactNumber, email, password, companyType);
        }
        
        public string GetClientCompanyType(int clientID) {
            return base.Channel.GetClientCompanyType(clientID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientCompanyTypeAsync(int clientID) {
            return base.Channel.GetClientCompanyTypeAsync(clientID);
        }
        
        public bool SetClientCompanyType(int clientID, string companyType) {
            return base.Channel.SetClientCompanyType(clientID, companyType);
        }
        
        public System.Threading.Tasks.Task<bool> SetClientCompanyTypeAsync(int clientID, string companyType) {
            return base.Channel.SetClientCompanyTypeAsync(clientID, companyType);
        }
    }
}
